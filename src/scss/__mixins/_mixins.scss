/**
 * @group css.mixins.mixins
 *
 * Here we define the reusable helper mixins
 *
 * ## Usage
 * Import into your main file using
 *
 * @example
 *     @import "__mixins/_mixins.scss";
 *
 *
 * ## Additional
 * We can also use compass which is a library of helper mixins. Here are the ones we commonly use:
 *
 * @example
 *     @include transition(all 0.3s ease-out);
 */

/**
 * Adds a size and line height and optional font family
 * 
 * @param {Number/String} $fontSize (1.6)
 * @param {Number/String} $lineHeight ($fontSize * 1.5)
 * @param {String} $fontFamily (inherit)
 *
 * @example
 *     @include font(14, 16, $f-opensans);
 * 
 * @example
 *     @include font(14, 16);
 */
@mixin font($fontSize: 1.6, $lineHeight: $fontSize * 1.5, $fontFamily: inherit) {
    $lteIE8: false !default;

    @if $fontFamily != inherit {
        font-family: $fontFamily;
    }
    @if $lteIE8 {
      font-size: $fontSize + px;
      line-height: $lineHeight + px;
    }
    @else {
      font-size: ($fontSize / 10) + rem;
      line-height: ($lineHeight / 10) + rem;
    }
}


/**
 * Adds transparency to an element
 *
 * @param {string} $color
 * @param {string} $alpha
 *
 * @example
 *     @include background-transparent(#000, .8);
 */
@mixin background-transparent($color, $alpha) {
  $lteIE8: false !default;

  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;

  // Only IE8 should out see these styles
  @if $lteIE8 == true {
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
    zoom: 1;
  }
}


/**
 * @param {number} $opacity
 *
 * @example
 *     @include opacity(0.5);
 */
@mixin opacity($opacity) {
    opacity: $opacity;
    filter:alpha(opacity=$opacity*100); /* For IE8 and earlier */
}


/**
 * Absolute Positioned
 *
 * @param {size} $top (auto)
 * @param {size} $right (auto)
 * @param {size} $bottom (auto)
 * @param {size} $left (auto)
 *
 * @example
 *     @include absPosition(5px, 20px, 10px, 15px);
 */
@mixin abs-position ($top: auto, $right: auto, $bottom: auto, $left: auto) {
     position: absolute;
     top: $top;
     right: $right;
     bottom: $bottom;
     left: $left;
}


/**
 * Retina Images
 * 
 * @param {string} $image
 * @param {size} $width
 * @param {size} $height
 *
 * @example
 *      @include image-2x("logo2x.png", 100px, 25px);
 */
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}



/**
 * Visually hidden, but have it available for screen readers
 *
 * @example
 *     @include vhdn;
 */
@mixin vhdn {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/**
 * Remove visually hidden
 *
 * @example
 *     @include vhdn-off;
 */
@mixin vhdn-off {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}


/**
 * Antialias Text
 *
 * @example
 *     @include anti-alias-text;
 */
@mixin anti-alias-text {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}


/**
 * Absolute Position Cover
 *
 * @example
 *     @include abs-cover;
 */
@mixin abs-cover {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
}

/**
 * Break Word
 *
 * @example
 *     @include break-word;
 */
@mixin break-word {
    word-wrap: break-word;
    word-break: break-word;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    hyphens: auto;
}


/**
 * CSS Triangles
 *
 * @param $dir
 *
 * @example
 *     @include triangle(down, 20px, $color-grey-2);
 */
@mixin triangle($dir, $size, $color) {
    border: $size transparent solid;
 
    @if ($dir == "top" or $dir == "up") {
        border-bottom-color: $color;
    }
    @else if ($dir == "right" or $dir == "after") {
        border-left-color: $color;
    }
    @else if ($dir == "bottom" or $dir == "down") {
        border-top-color: $color;
    }
    @else if ($dir == "left" or $dir == "before") {
        border-right-color: $color;
    }
}


